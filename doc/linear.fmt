%if False
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% linear.fmt
%
% Format -> as a period when part of a lambda abstraction,
% as a lolli when used as part of a linear function arrow,
% and as an arrow otherwise.
%
% Wen Kokke, February 2021, version 1.0
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%endif
%
%if not lhs2tex_lambda_fmt_read
%let lhs2tex_lambda_fmt_read = True
%include lhs2TeX.fmt
%
%if style /= newcode
%
%format %              = "\hsPercent "
%format 1              = "\hsOne "
%format \              = lambda_ "\hsLambdaCmd "
%format ->             = "\hsArrow{" `arrow_` "}{" `lineararrow_` "}{" lambdaperiod_ "}"
%format forall(x)      = forall_ x "\hsForallCmd "
%format .              = "\hsDot{" `comp_` "}{" period_ "}"
%format percent_       = "\%"
%format one_           = "1"
%format lambda_        = "\lambda "
%format `arrow_`       = "\rightarrow "
%format `lineararrow_` = "\multimap "
%format lambdaperiod_  = "\mathpunct{.}"
%format forall_        = "\forall "
%format `comp_`        = "\circ "
%format period_        = "\mathpunct{.}"
%
\ReadOnlyOnce{linear.fmt}
\makeatletter

% The HaskellResetHook is a list to which things can
% be added that reset the Haskell state to the beginning.
% This is to recover from states where the hacked intelligence
% is not sufficient.

\let\HaskellResetHook\empty
\newcommand*{\AtHaskellReset}[1]{%
  \g@@addto@@macro\HaskellResetHook{#1}}
\newcommand*{\HaskellReset}{\HaskellResetHook}

\newcommand*\hsNoOp{}
\newcommand*\hsUnrestrictedArrow[3]{#1}
\newcommand*\hsLinearArrow[3]{#2\global\let\hsArrow=\hsUnrestrictedArrow}
\newcommand*\hsLambdaPeriod[3]{#3\global\let\hsArrow=\hsUnrestrictedArrow}
\newcommand\hsPercent{%
  \global\let\hsOne=\hsOneAfterPercentCmd}
\newcommand*\hsOneAfterPercentCmd{%
  \global\let\hsOne=1
  \global\let\hsArrow=\hsLinearArrow}
\newcommand\hsLambdaCmd{\global\let\hsArrow=\hsLambdaPeriod}
\newcommand\hsForallCmd{\global\let\hsDot=\hsPeriod}
\newcommand\hsPeriod[2]{#2\global\let\hsDot=\hsCompose}
\newcommand\hsCompose[2]{#1}

\AtHaskellReset{%
  \global\let\hsOne=1
  \global\let\hsArrow=\hsUnrestrictedArrow
	\global\let\hsDot=\hsCompose}

\HaskellReset

\makeatother
\EndFmtInput
%endif
%endif
